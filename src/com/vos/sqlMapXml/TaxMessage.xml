<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"   
						"http://ibatis.apache.org/dtd/sql-map-2.dtd">
						
<sqlMap>
	<insert id="saveMsg" parameterClass="com.vos.Message">
		insert into tax_message(content,type,etdate) values(#content#,#msgType#,str_to_date(now(),'%Y-%m-%d %H:%i:%s'))
	<selectKey resultClass="java.lang.Integer"  keyProperty="id" >    
             SELECT last_insert_id() as id
        </selectKey>  
	</insert>
	
	<insert id="saveMsgResult" parameterClass="java.util.Map">
		insert into tax_state(taxid,mesid,empid,senddate,state,resultmsg,RecId) values (#taxId#,#mesId#,#empId#,str_to_date(#sendDate#,'%Y-%m-%d %H:%i:%s'),#status#,#msg#,#receiver#)
		<selectKey resultClass="java.lang.Integer"  keyProperty="Id" >    
             SELECT last_insert_id() as id
        </selectKey>  
	</insert>
	<select id="getMessageResultList" resultClass="com.vos.Message" parameterClass="java.util.Map">
		<![CDATA[
			select m.mesId as Id,m.content as content,m.Content as content,sum(case when state = '1' then 1 else 0 end) as successCount,sum(case when state < '1' then 1 else 0 end) as failCount,s.SendDate as sendDate,e.loginname as sendBy 
							from tax_state s,tax_employees e,tax_message m 
										where s.EmpId=e.EmpId and s.MesId = m.MesId  
		]]>
			<dynamic>
			 <isNotNull prepend="AND" property="content">       
                  (content like '%$content$%')       
            </isNotNull>
            <isNotNull prepend="AND" property="sendDate">
            <![CDATA[       
                  (sendDate >=  #sendDate#)  
                   ]]>      
            </isNotNull>
            <isNotNull prepend="AND" property="sendDateEnd">  
            <![CDATA[     
                  (sendDate <=  #sendDateEnd#) 
                  ]]>       
            </isNotNull>
<!--              <isNotNull prepend="AND" property="status">     -->
<!--                   (failCount > 0)     -->
<!--             </isNotNull>  -->
		</dynamic>
		group by m.MesId limit #beginRow#,#pageSize#
	</select>
		<select id="getMessageResultCount" resultClass="java.lang.Integer">
		<![CDATA[
					select count(*) from (select m.mesId as Id,m.Content as content,sum(case when state = '1' then 1 else 0 end) as successCount,sum(case when state < '1' then 1 else 0 end) as failCount,s.SendDate as sendDate,e.loginname as sendBy 
										from tax_state s,tax_employees e,tax_message m 
												where s.EmpId=e.EmpId and s.MesId = m.MesId  group by m.MesId) a
		]]>
	</select>
	<select id="getFailMsgStateList" resultClass="com.vos.NotificationVo" parameterClass="java.util.Map">
		<![CDATA[
		select s.TaxId as taxNo, b.TaxName as taxName,s.State as status,s.ResultMsg as resultMsg,case RecId when 1 then '办税员' when 2 then '财务主管' when 3 then '法人' end as receiver,b.TaxAgentMobile as taxerMob,b.AdminMobile as adminMob,b.RepMobile as lawRepMob 
								from tax_state s,tax_entbasicinfor b where s.TaxId = b.TaxId and s.MesId = #msgId# and s.State < 0 limit #beginRow#,#pageSize#
		]]>
	</select>
	<update id="updateMsgResult" parameterClass="java.util.Map">
		update tax_state set state = #status#,senddate = #sendDate#,resultMsg = #msg#,empid = #empId#,recid = #receiver# where mesid = #mesId# and state = #errCode#
	</update>
	
	<select id="getAllComp" resultClass="com.vos.MessageSearchVO" parameterClass="java.util.Map">
	<![CDATA[
		select * from tax_entbasicinfor
	]]>
		<dynamic prepend="WHERE">
			 <isNotNull prepend="AND" property="taxId">       
                  (taxId = #taxId#)       
            </isNotNull>
            <isNotNull prepend="AND" property="taxName">       
                  (taxName like '%$taxName$%')       
            </isNotNull>
		</dynamic>
		limit #firstRow#,#pageSize#		
	</select>
	
	<select id="getCompCount" resultClass="java.lang.Integer" parameterClass="com.vos.MessageSearchVO">
	<![CDATA[
		select count(*) from tax_entbasicinfor
		]]>
		<dynamic prepend="WHERE"> 
			 <isNotNull prepend="AND" property="taxId">       
                  (taxId = #taxId#)       
            </isNotNull>
            <isNotNull prepend="AND" property="taxName">       
                  (taxName like '%$taxName$%')       
            </isNotNull> 
		</dynamic>		
		
	</select>
	<select id="validateUser" parameterClass="com.vos.User" resultClass="com.vos.User">
		select * from tax_employees where loginName = #loginName# and password = #password#
	</select>
	
	<select id="getFailMsg" resultClass="com.vos.NotificationVo" parameterClass="java.util.Map">
		<![CDATA[
		select s.TaxId as taxNo, b.TaxName as taxName,s.State as status,s.ResultMsg as resultMsg,case RecId when 1 then '办税员' when 2 then '财务主管' when 3 then '法人' end as receiver from tax_state s,tax_entbasicinfor b where s.MesId = #msgId# and s.State < 0
		]]>
	</select>
	<select id="getAllUser" resultClass="com.vos.User" parameterClass="java.util.Map">
	<![CDATA[
		select empId,loginName,mobile as contact,email,lastlogindate as lastLoginDate,sendtoself as sendToSelf from tax_employees
	]]>
		<dynamic prepend="WHERE">
			 <isNotNull prepend="AND" property="empId">       
                  (empId like '%$empId$%')       
            </isNotNull>
            <isNotNull prepend="AND" property="loginName">       
                  (loginName like '%$loginName$%')       
            </isNotNull>
            <isNotNull prepend="AND" property="beginDate">
            <![CDATA[       
                  (LastLoginDate >=  #beginDate#)  
                   ]]>      
            </isNotNull>
            <isNotNull prepend="AND" property="endDate">  
            <![CDATA[     
                  (LastLoginDate <=  #endDate#) 
                  ]]>
             </isNotNull>
		</dynamic>
		limit #firstRow#,#pageSize#		
	</select>
	<select id="getUserCount" resultClass="java.lang.Integer" parameterClass="com.vos.UserSearchVo">
	<![CDATA[
		select count(*) from tax_employees
		]]>
		<dynamic prepend="WHERE">
			 <isNotNull prepend="AND" property="empId">       
                  (empId like '%$empId$%')       
            </isNotNull>
            <isNotNull prepend="AND" property="loginName">       
                  (loginName like '%$loginName$%')       
            </isNotNull>
            <isNotEmpty  prepend="AND" property="beginDate">
            <![CDATA[       
                  (LastLoginDate >=  #beginDate#)  
                   ]]>      
            </isNotEmpty >
            <isNotEmpty  prepend="AND" property="endDate">
            <![CDATA[     
                  (LastLoginDate <=  #endDate#) 
                  ]]>
             </isNotEmpty >
		</dynamic>	
		
	</select>
</sqlMap>
